@RunWith(MockitoJUnitRunner.class)
public class InitializeDBComponentImplTest {

    @Mock
    private Vertx mockVertx;

    @Mock
    private Marker mockMarker;

    @Mock
    private DBComponentDirectInstance mockDBComponentDirectInstance;

    @InjectMocks
    private InitializeDBComponentImpl initializeDBComponent;

    @Before
    public void setUp() {
        // Mock init method for DBComponentDirectInstance
        Mockito.doReturn(Future.succeededFuture(mockDBComponentDirectInstance))
                .when(mockDBComponentDirectInstance)
                .init(any(Vertx.class), any(JsonObject.class), any(Marker.class));
    }

    @Test
    public void testInitializeDBComponentWithDirectInstance() {
        // Arrange
        JsonObject config = new JsonObject()
                .put("common", new JsonObject()
                        .put("db.jar.verticle.approach.active", false));

        // Act
        Future<DBComponentDirectInstance> future = initializeDBComponent.initializeDBComponent(mockVertx, config, mockMarker);

        // Assert
        assertNotNull(future);
        assertTrue(future.succeeded());
        assertEquals(mockDBComponentDirectInstance, future.result());

        // Verify the init method was called once
        Mockito.verify(mockDBComponentDirectInstance, times(1))
                .init(any(Vertx.class), any(JsonObject.class), any(Marker.class));
    }
}
